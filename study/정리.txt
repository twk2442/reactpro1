class 1

spa 개념 
현대에 이르러 점차 웹 사이트가 고도화됨에 따라 한 페이지에 해당하는 페이지 용량이 커져갔고,
 매번 새로운 페이지를 전달하는 게 점점 버거워지게 되었다.
 이로인해 등장한 개념이 spa개념이다 
 link tag를 사용하는 전통적인 웹 방식은 새로운 페이지 요청 시마다 정적 리소스가 다운로드되고 
 전체 페이지를 다시 렌더링하는 방식을 사용하므로 새로고침이 발생되어 사용성이 좋지 않다. 
 그리고 변경이 필요없는 부분를 포함하여 전체 페이지를 갱신하므로 비효율적이다.

SPA는 기본적으로 웹 애플리케이션에 필요한 모든 정적 리소스를 최초에 한번 다운로드한다. 
이후 새로운 페이지 요청 시, 페이지 갱신에 필요한 데이터만을 전달받아 페이지를 갱신하므로 
전체적인 트래픽을 감소할 수 있고, 전체 페이지를 다시 렌더링하지 않고 변경되는 부분만을 
갱신하므로 새로고침이 발생하지 않아 네이티브 앱과 유사한 사용자 경험을 제공할 수 있다.

랜더링:
랜더링이란 HTML,CSS,JavaScript 등 개발자가 작성한 문서를 브라우저에서 그래픽 형태로 
출력하는 과정을 말한다.

앨리먼트:
정의 : 엘리먼트는 React앱의 가장 작은 단위 이며, 불변객체입니다.
브라우저 DOM 엘리먼트와 달리 React 엘리먼트는 일반 객체이며(plain object) 쉽게 생성할 수 있습니다.

jsx 
정의 : 리엑트에서 UI를 표현할 떄 쓰는 문법 / HTML 처럼 쓰면 되지만, 사실 HTML은 아니다.
js 에서 확장된  문법이라고 생각 
  jsx규칙:  

1. < />형태 꼭 닫혀야 하는 태그, 꼭 감싸져 있는 태그, 객체형태의 style
2.{}안에는 자바스크립트 표현식이 들어가야한다!!! 그래서 조건부 렌더링을 할때도 if 말고 3항 방정식을 사용
3.모든 항목은 렌더링 되기전 문자열로 변환
4.JSX는 React.creatElement()로 컴파일 되며 virtual Dom의 노드형태로 변환

///////

1) 개발할 때는 npm run start --> 이것저것 기능들이 많이 들어있어서 엄청 용량이 크다.
2) 개발하다가 어플리케이션을 완성한 후에는 npm run build --> 용량을 엄청 줄여준다.
/////

  vmfhsxm
리엑트 

컴포넌트: 정리정돈의 도구  ,사용자 정의 태그 , js 함수와 비슷 
props를 입력받아 element를 반환

각 컴포넌트들을 파일별로 쪼개서(1기능 1컴포 1파일) 정리 


props:속성을 나타내는 데이터 // 입력값 




//

// =>화살표 함수 공부  
//es6 ecma
//ts 
//let , var,const   차이
//호이스팅

